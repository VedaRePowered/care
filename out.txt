
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"Segments: ], Len: [1"
care -> single-seg, testing with "{, ""timekeyboard""}, 
" -> Replaced
is_down"], Len: 3
Segments: ["Segments: Key["", time""Up]", Len: ]1, Len: 
2 -> single-seg, testing with 
{"time"}
Segments:  -> Replaced
["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {}
Segments: ["rand", "thread_rng"], Len: 2
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "set_colour"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {}
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {}
Segments: ["rand", "thread_rng"], Len: 2
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "set_colour"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {}
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "posSegments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: [""time"]}, Len: 
1 -> Replaced

 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {}
Segments: ["rand", "thread_rng"], Len: 2
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "set_colour"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {}
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["rand", "thread_rng"], Len: 2
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["careSegments: "["care", "Segments: , graphics""[graphics", "care", "rectangleset_colour""]]", Len: , Len: , 33"

graphics", "Segments: texture[""]rngSegments: ["time"], Len: , Len: "13]

, Len:  -> single-seg, testing with 1{
" -> single-seg, testing with time{"}}

Segments:  -> Replaced
["tex"], Len: Segments: Segments: 1[Segments: [
"[" -> single-seg, testing with rng"{"caretime"]""], Len: 1
tex, Len: ,  -> single-seg, testing with ""1{keyboard}
""
 -> single-seg, testing with time,  -> Replaced
{""}}is_down
"
] -> Replaced
, Len: 3Segments: 
["rng"], Len: Segments: 1[
" -> single-seg, testing with {Key}"
, "Up"], Len: Segments: 2[
"care", "graphics"Segments: , [""rectanglepos""]], Len: , Len: 31

 -> single-seg, testing with Segments: {[""posrng"", ], Len: "1texture
" -> single-seg, testing with }{
} -> Replaced

Segments: ["rng"Segments: ][, Len: 1"
delta -> single-seg, testing with "{]}, Len: 
1
 -> single-seg, testing with {"Segments: pos["", rng""texture]", Len: }1

 -> single-seg, testing with {}
Segments: Segments: [[""carerng""], , Len: "1keyboard
" -> single-seg, testing with , {"}is_down
"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: Segments: [[""carerand"", , ""thread_rnggraphics""], Len: , 2"
texture"], Len: 3Segments: 
[Segments: "[rngSegments: ""[care]"", Len: , tex1""
graphics] -> single-seg, testing with ", Len: {, 1}"

rectangle" -> single-seg, testing with ]{, Len: "Segments: 3texSegments: 
["["}"care
care"" -> Replaced
, Segments: , "["keyboard"graphics"time", ", "]"is_down, Len: set_colour"1"]
], Len:  -> single-seg, testing with , Len: 3{3
"
time"Segments: }[Segments: 
"[ -> Replaced
Key""rng, ""]Up, Len: "1]
, Len: Segments:  -> single-seg, testing with 2[{
"}time
"]Segments: , Len: [1"
posSegments:  -> single-seg, testing with "{[]"", Len: time1rng"
"} -> single-seg, testing with ]
{, Len:  -> Replaced
"1texture
" -> single-seg, testing with , {"}pos
"}
 -> Replaced
Segments: ["rng"], Len: Segments: 1[
" -> single-seg, testing with delta{"}]
, Len: 1
 -> single-seg, testing with {"texture"Segments: , "[pos""care}"
, "graphics", "rectangleSegments: "][, Len: "3care
", "keyboardSegments: "[, ""rngis_down""]], Len: , Len: 13

 -> single-seg, testing with {}Segments: 
["Key", "Segments: Down[""]rng, Len: "2]
, Len: 1
 -> single-seg, testing with Segments: {[}"
pos"], Len: 1
 -> single-seg, testing with Segments: {[""texturerng"", ]", Len: pos1"
} -> single-seg, testing with 
{ -> Replaced
}
Segments: Segments: [[""deltarng""]], Len: , Len: 11

 -> single-seg, testing with  -> single-seg, testing with {{}"
texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: Segments: [[""carecare"", , "graphics""keyboard, ""Segments: , texture"["is_down]"", Len: care]3", Len: 
Segments: , 3Segments: "[
[graphics"""randSegments: tex, "["", "]rectangle", Len: Key"thread_rng1"]"
, , Len: ] -> single-seg, testing with "3, Len: {Up
2""
tex]", Len: }2

Segments:  -> Replaced
["Segments: rngSegments: "[[]"", Len: time1pos"
"] -> single-seg, testing with ], Len: {, Len: 1}1


 -> single-seg, testing with  -> single-seg, testing with {{""timeSegments: pos""[}, "
"care -> Replaced
texture"", }"
graphics" -> Replaced
, "set_colour"], Len: 3Segments: 
["Segments: timeSegments: ["["]"delta, Len: rng"1"]
], Len: , Len:  -> single-seg, testing with 11{

" -> single-seg, testing with time -> single-seg, testing with {"{"}}pos

" -> Replaced
, "textureSegments: "[}"
rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["careSegments: "[", rng""keyboard]", Len: , 1"
is_down -> single-seg, testing with {"}
], Len: 3
Segments: Segments: [[""careKey"", , ""graphicsDown"", ]", Len: rectangle2"
], Len: 3
Segments: Segments: [[""rngpos"]", Len: ]1, Len: 
1 -> single-seg, testing with 
{ -> single-seg, testing with }{
"pos", "Segments: texture[""}rng"
], Len:  -> Replaced
1
 -> single-seg, testing with {}
Segments: [Segments: "[delta""rng]", Len: ]1, Len: 
1
 -> single-seg, testing with  -> single-seg, testing with {{}"
pos", "Segments: texture[""}rng
"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["rand", "thread_rng"], Len: 2
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "set_colour"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: [Segments: "[care""rng"], Len: , 1Segments: "
graphics[ -> single-seg, testing with "Segments: "{, [care}"""
texturecare, """], keyboard, Len: ""3Segments: graphics, 
[""", is_downrng"Segments: ""rectangle[]]"", Len: , Len: ]tex31, Len: "
]
3, Len:  -> single-seg, testing with 
1Segments: {
[}" -> single-seg, testing with 
Key{"", tex""UpSegments: }"Segments: [
][ -> Replaced
", Len: "time2care"
"], , Len: "1Segments: graphics
[" -> single-seg, testing with ", pos{""rectangle"]"time, Len: ]1", Len: 
3} -> single-seg, testing with 

{ -> Replaced
"Segments: texture["", rng""]pos, Len: "1}

 -> single-seg, testing with Segments:  -> Replaced
{[}"
time"]Segments: , Len: Segments: [1["
"deltarng -> single-seg, testing with ""{]], Len: ", Len: 1time1
"
 -> single-seg, testing with } -> single-seg, testing with {{
"}texture -> Replaced

", "pos"}
Segments: ["rng"Segments: ][, Len: "1care
" -> single-seg, testing with , {"}keyboard
", "is_down"], Len: Segments: 3[
"rng"Segments: ][, Len: "1Key
" -> single-seg, testing with , {"}Down
"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: Segments: [[""carerand"", , ""graphicsthread_rng"", ]", Len: texture2"
], Len: 3
Segments: [Segments: "[rng""], Len: tex1"
] -> single-seg, testing with {, Len: }1

 -> single-seg, testing with {"texSegments: "[}"
care" -> Replaced
, "graphics", "set_colour"], Len: 3
Segments: Segments: ["[rng""care]", Len: , 1"
keyboard" -> single-seg, testing with , {"}is_down
"], Len: 3
Segments: [Segments: "[rng""Key]", Len: , 1"
Up -> single-seg, testing with "{]}, Len: 
2
Segments: Segments: [[""posrng""]], Len: , Len: 11

 -> single-seg, testing with  -> single-seg, testing with {{}"
texture", "pos"}
Segments:  -> Replaced
["care", "graphics"Segments: , [""rectangledelta""]], Len: , Len: 31

 -> single-seg, testing with {Segments: "[texture""rng, ""]pos, Len: "1}

 -> single-seg, testing with {}
Segments: ["careSegments: "[, ""rngkeyboard""], Len: , 1"
is_down -> single-seg, testing with "{]}, Len: 
3
Segments: ["KeySegments: "[, ""rngDown""]], Len: , Len: 21

 -> single-seg, testing with {}Segments: 
["pos"], Len: Segments: 1
[ -> single-seg, testing with "{rng""]texture, Len: "1, 
" -> single-seg, testing with pos{"}}

 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care"Segments: , "[graphics""rand, "", texture""thread_rng]", Len: ]3, Len: Segments: 
2[
"care"Segments: , [""graphicstex""Segments: , ][", Len: "1rectanglerng
"" -> single-seg, testing with ]]{, Len: , Len: "3Segments: 1tex
[
""} -> single-seg, testing with care
{" -> Replaced
}, Segments: 
"[keyboard""time, ""]is_down, Len: "1]
Segments: , Len:  -> single-seg, testing with [3{"
"caretime""Segments: , }["
"graphics -> Replaced
Key"", , ""Upset_colour""]], Len: Segments: , Len: 2[3
"
time"]Segments: , Len: [1"
Segments: pos -> single-seg, testing with ["{"]"rng, Len: time"1"]
}, Len:  -> single-seg, testing with 
1{ -> Replaced

"pos -> single-seg, testing with "{, }"
texture"}
 -> Replaced
Segments: ["Segments: rng[""]delta, Len: "1]
, Len: 1 -> single-seg, testing with 
{ -> single-seg, testing with {}"
pos", "texture"}
Segments: [Segments: "[rng""care]", Len: , 1"
keyboard -> single-seg, testing with "{, }"
is_down"], Len: 3
Segments: ["Key"Segments: , ["Down""care]", Len: , 2"
graphics", Segments: "[rectangle""pos]", Len: ]3, Len: 1

 -> single-seg, testing with {"posSegments: "[, ""rngtexture""]}, Len: 
1 -> Replaced

 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
Segments:  -> single-seg, testing with [{""rngpos"", ]", Len: texture1"
} -> single-seg, testing with 
{}
Segments: ["care", "keyboard"Segments: , [""is_downrng""]], Len: , Len: 31

 -> single-seg, testing with Segments: {["}Key
", "Right"], Len: 2
Segments: Segments: [[""rngpos""]], Len: , Len: 11

 -> single-seg, testing with  -> single-seg, testing with {{"}pos
", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["rand", "thread_rng"], Len: 2
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "set_colour"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: Segments: [["rng""]care, Len: "1, 
" -> single-seg, testing with graphics{"}, 
"rectangle"], Len: Segments: 3[
"rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["timeSegments: "[]", Len: care"1, 
"graphics -> single-seg, testing with "{, ""timerectangle""}]
, Len: 3 -> Replaced

Segments: ["rng"], Len: 1
 -> single-seg, testing with {Segments: }[
"time"], Len: Segments: 1[
"rng -> single-seg, testing with "{]", Len: time1"
} -> single-seg, testing with 
{} -> Replaced

Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_downSegments: "[]", Len: care3"
, "graphics", Segments: "texture[""]Key, Len: ", 3"
Up"]Segments: , Len: [2
"tex"], Len: Segments: 1[
"pos -> single-seg, testing with "{]", Len: tex1"
} -> single-seg, testing with 
{ -> Replaced
"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["rand", "thread_rng"], Len: 2
Segments: ["rng"Segments: ][, Len: 1"
care -> single-seg, testing with "{, }"
graphics", "rectangle"], Len: Segments: 3[
"care"Segments: , Segments: "[[graphics"""caretime, """, ]set_colour", Len: "keyboard1]"
, Len: , 3 -> single-seg, testing with "
{is_down""time]", Len: Segments: }3[

" -> Replaced
rng"Segments: ][, Len: "1Key
" -> single-seg, testing with , {"Segments: }Up[
""]time, Len: "2]
, Len: Segments: 1[
" -> single-seg, testing with Segments: rng{["""]timepos, Len: ""1}]

, Len: Segments:  -> single-seg, testing with 1 -> Replaced
{[
}"
 -> single-seg, testing with care{"", texture""graphics"Segments: , , ["""postexturerng"""}]]
, Len: , Len: 3 -> Replaced
1

 -> single-seg, testing with {Segments: }[
"tex"]Segments: , Len: [1"
delta -> single-seg, testing with "{]"Segments: tex, Len: ["1"}
care
 -> single-seg, testing with " -> Replaced
{, ""graphicstexture"", , ""rectanglepos""]}, Len: 
3
Segments: Segments: [[""rngcare""], , Len: "1keyboard
",  -> single-seg, testing with "{is_down}"
], Len: 3
Segments: Segments: [[""Keyrng"", ]", Len: Down1"
] -> single-seg, testing with , Len: {2}

Segments: ["Segments: pos[""]rng, Len: "1]
, Len:  -> single-seg, testing with 1{
" -> single-seg, testing with texture{"}, 
"pos"}
 -> Replaced
Segments: ["rng"], Len: 1Segments: 
[ -> single-seg, testing with "{delta}"
], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: Segments: [["rand""care, ""thread_rng, ""]graphics, Len: "2, 
"texture"], Len: Segments: 3["
rng"], Len: 1
Segments:  -> single-seg, testing with [{"}tex
"], Len: 1
Segments:  -> single-seg, testing with [{""care"tex, ""graphics}"
Segments: ,  -> Replaced
["set_colour""care]", Len: , 3"
graphics"Segments: , Segments: "[[rectangle"""carerng]"", Len: , ]3", Len: 
keyboard1"
,  -> single-seg, testing with "{is_down}"
]Segments: , Len: [3"
timeSegments: "[]Segments: ", Len: rng[1""
] -> single-seg, testing with Key, Len: {1""
, time -> single-seg, testing with ""{Up}}"

] -> Replaced
, Len: 2
Segments: [Segments: "[rng""Segments: pos][", Len: "]1time, Len: 
"1 -> single-seg, testing with ]
{, Len:  -> single-seg, testing with }1{

" -> single-seg, testing with texture{"", time""pos}"Segments: 
}[ -> Replaced

" -> Replaced
care", "graphics", "rectangle"Segments: ], Len: [3"
delta"], Len: Segments: 1[
" -> single-seg, testing with rng{""]texture, Len: "1, 
" -> single-seg, testing with pos{"}}

Segments: Segments: [[""rngcare""], , Len: "keyboard1"
,  -> single-seg, testing with "{is_down}"
], Len: 3
Segments: Segments: [[""Keyrng"", ]", Len: Down1"
] -> single-seg, testing with , Len: {2}

Segments: ["Segments: pos[""]rng, Len: "1]
, Len:  -> single-seg, testing with 1{
"texture", "pos -> single-seg, testing with "{}}

 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: Segments: [[""time"care]", Len: , 1"
keyboard -> single-seg, testing with "{, ""timeis_down""}]
, Len:  -> Replaced
3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"Segments: texture"[, ""carepos"", }"
graphics", "texture"], Len: 3
Segments: [Segments: "[care""tex, ""]keyboard, Len: "1, 
" -> single-seg, testing with is_down{""]tex, Len: "3}

 -> Replaced
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {}
Segments: ["rand", "thread_rng"], Len: 2
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "set_colour"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {}
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: Segments: [[""randcare"", , ""thread_rnggraphics""], , Len: "2rectangle
"], Len: 3
Segments: [Segments: "[rng""time]", Len: ]1, Len: 
1
 -> single-seg, testing with  -> single-seg, testing with {{}"
time"}
 -> Replaced
Segments: ["Segments: care["", time""graphics]", Len: , 1"
Segments: set_colour -> single-seg, testing with "[{"]"care, Len: time"3", 
}"
keyboard -> Replaced
"Segments: , [""is_downrng""]], Len: , Len: 31

 -> single-seg, testing with {Segments: }[
"Key", "Up"]Segments: , Len: [2"
rng"], Len: 1Segments: 
[ -> single-seg, testing with "{pos}"
], Len: 1
 -> single-seg, testing with {"Segments: pos["", rng""texture]", Len: }1

 -> Replaced
 -> single-seg, testing with {}
Segments: ["delta"Segments: ][, Len: "1care
" -> single-seg, testing with , {""graphicspos"", , ""rectangletexture""]}, Len: 
3
Segments: Segments: [[""rngcare""], , Len: "1keyboard
",  -> single-seg, testing with "{is_down}"
], Len: 3
Segments: Segments: [[""Keyrng"", ]", Len: Down1"
] -> single-seg, testing with , Len: {2}

Segments: ["pos"Segments: ][, Len: "1rng
" -> single-seg, testing with ]{, Len: "1pos
" -> single-seg, testing with , {"}texture
"}
 -> Replaced
Segments: ["Segments: rng[""]delta, Len: "1]
, Len: 1 -> single-seg, testing with 
{ -> single-seg, testing with }{
"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: [Segments: "tex[""]rand, Len: "1
,  -> single-seg, testing with "{thread_rngSegments: "["tex""]care}, Len: "
, 2 -> Replaced
"
graphics", "rectangle"], Len: 3
Segments: ["rng"Segments: ][, Len: "1time
"] -> single-seg, testing with , Len: 1{
} -> single-seg, testing with 
{"time"}
 -> Replaced
Segments: ["careSegments: "[, "time""graphics]", Len: , 1
" -> single-seg, testing with set_colour{""]time, Len: "}3

 -> Replaced
Segments: ["rngSegments: "][, Len: "1care
" -> single-seg, testing with , {"}keyboard
", "is_down"], Len: Segments: 3[
"rng"]Segments: , Len: [1"
Key -> single-seg, testing with "{, }"
Up"], Len: 2
Segments: ["rngSegments: "[]", Len: pos1"
] -> single-seg, testing with , Len: {1}

 -> single-seg, testing with {"texture", "posSegments: "[}"
care -> Replaced
", "graphics", "rectangle"Segments: ][, Len: "3delta
"], Len: 1Segments: 
[ -> single-seg, testing with "{rng""texture]", Len: , 1"
pos -> single-seg, testing with "{}}

Segments: Segments: [[""carerng"", ]", Len: keyboard1"
,  -> single-seg, testing with "{is_down}"
], Len: 3
Segments: [Segments: "[Key""rng, ""]Down, Len: "1]
, Len:  -> single-seg, testing with 2{
}
Segments: ["posSegments: "[]", Len: rng1"
] -> single-seg, testing with , Len: {1"
texture -> single-seg, testing with "{, }"
pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["care"Segments: , "[keyboard"", "careis_down"", ]", Len: graphics3
", Segments: "["rectangleKey"", ]", Len: Up"3]
, Len: 2
Segments: ["pos"], Len: 1Segments: 
[ -> single-seg, testing with {""timepos""], , Len: "1texture
"} -> single-seg, testing with 
{ -> Replaced
"time"}
Segments:  -> Replaced
["delta"], Len: 1
 -> single-seg, testing with {"pos", "Segments: texture[""}
time"], Len: 1Segments: 
[" -> single-seg, testing with care{"", time""keyboard"}, 
"is_down -> Replaced
"]Segments: , Len: 3[
"rand"Segments: , [""thread_rngKey""], , Len: "2Down
"], Len: 2
Segments: Segments: [[""rngpos""]], Len: , Len: 11

 -> single-seg, testing with  -> single-seg, testing with {{}"
pos", "texture"}
Segments:  -> Replaced
["care", "graphicsSegments: "[, ""set_colourdelta""]], Len: 3, Len: 
1
 -> single-seg, testing with {Segments: "[pos""rng, ""], Len: texture1"
} -> single-seg, testing with 
{}
Segments: ["careSegments: ", [""keyboardrng"", ]", Len: is_down1"
] -> single-seg, testing with , Len: {3}

Segments: ["Key"Segments: , [""Rightrng""]], Len: , Len: 21

 -> single-seg, testing with {}Segments: 
["pos"], Len: 1
 -> single-seg, testing with {Segments: "[pos""care, "", texture""graphics}"
,  -> Replaced
"rectangle"], Len: 3
Segments: ["Segments: delta[""], Len: rng1"
] -> single-seg, testing with , Len: {1"
pos -> single-seg, testing with "{, }"
texture"}
Segments: [Segments: "[rng""care]", Len: , 1"
keyboard -> single-seg, testing with "{, }"
is_down"], Len: 3
Segments: Segments: [[""rngKey"", ]", Len: Left1"
] -> single-seg, testing with , Len: {2}

Segments: ["Segments: [pos""rng]", Len: 1]
, Len:  -> single-seg, testing with 1{
" -> single-seg, testing with pos{"}, 
"texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["care", Segments: "[graphics""delta, ""], Len: texture1"
Segments: ] -> single-seg, testing with [, Len: {3""
randtime"", }Segments: "
[thread_rng""tex]", Len: ]2
, Len: 1
 -> single-seg, testing with {"Segments: tex[""}rng
" -> Replaced
], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "set_colour"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["Segments: care"[, ""caregraphics"", , "graphics""rectangle, ""]rectangle, Len: "3]
, Len: 3
Segments: ["rng"], Len: 1Segments: 
Segments: [ -> single-seg, testing with "[{time"}"care
]", Len: , 1"
keyboard -> single-seg, testing with Segments: "{[, """timerngis_down"""}]
], Len:  -> Replaced
, Len: 13

 -> single-seg, testing with {}
Segments: Segments: [[""Segments: timeKey["""]rng, Len: , "1"]
Up, Len:  -> single-seg, testing with "1{]
", Len:  -> single-seg, testing with time2{"
}}

 -> Replaced
Segments: [Segments: "[pos""rng]"], Len: , Len: 11

 -> single-seg, testing with { -> single-seg, testing with }{
"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["rand", "thread_rng"], Len: 2
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "set_colour"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {}
Segments: ["rand", "thread_rng"], Len: 2
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "set_colour"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {}
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", Segments: "graphics["", rand"", texture""thread_rng]", Len: ]3, Len: 
2
Segments: ["tex"Segments: ][, Len: "1rng
" -> single-seg, testing with ], Len: {1"
tex -> single-seg, testing with "{}}

 -> Replaced
Segments: ["care", "graphics", "set_colour"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: Segments: [[""Segments: rngcare"["], ", Len: "care1keyboard"
",  -> single-seg, testing with , "{"graphics}is_down"
", ]", Len: rectangle3"
Segments: ][, Len: "Segments: 3rng[
""]Key, Len: 1"
,  -> single-seg, testing with "{Up}"
], Len: Segments: 2[
"time"Segments: Segments: ][[, Len: ""1carepos
"",  -> single-seg, testing with ]"{, Len: graphics"1"time
, " -> single-seg, testing with "}{rectangle
""texture -> Replaced
]", Len: , 3"
pos"}
Segments:  -> Replaced
["rng"Segments: ][, Len: "1Segments: time
[" -> single-seg, testing with "]{delta, Len: }"1
]
, Len:  -> single-seg, testing with 1{
Segments: "[ -> single-seg, testing with time"{"rng"}"texture
]", Len:  -> Replaced
, 1"
pos -> single-seg, testing with "{}}

Segments: Segments: [[""carerng"", ]", Len: keyboard1"
,  -> single-seg, testing with "{is_down}"
], Len: 3
Segments: Segments: [[""Keyrng"", ]", Len: Down1"
] -> single-seg, testing with , Len: {2}

Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: [Segments: "[care""time, ""]keyboard, Len: "1, 
" -> single-seg, testing with is_down{""]time, Len: "3}

 -> Replaced
Segments: ["Key", "Up"], Len: 2Segments: 
["time"]Segments: , Len: [1"
pos -> single-seg, testing with "{]", Len: 1time
" -> single-seg, testing with }{
" -> Replaced
pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: [Segments: "[delta""care]", Len: , 1"
keyboard -> single-seg, testing with "{, ""timeis_down""}]
, Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: Segments: [[""caredelta"", ]", Len: graphics1"
,  -> single-seg, testing with "{rectangle""texture]", Len: 3
, "pos"}
Segments: ["time"], Len: 1
Segments:  -> single-seg, testing with [{""caretime"", }"
keyboard -> Replaced
", "is_down"], Len: 3Segments: 
["time"Segments: ][, Len: "1
Key -> single-seg, testing with "{, ""timeRight""}]
, Len:  -> Replaced
2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"Segments: }[
"care -> Replaced
", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
Segments:  -> Replaced
["care", "keyboard", "is_down"Segments: ][, Len: "3time
"], Len: 1Segments: 
[ -> single-seg, testing with "{Key""time, ""}Up
" -> Replaced
], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {}
Segments: ["rand", "thread_rng"], Len: 2
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "set_colour"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {}
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["texture"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: Segments: [[""carerand"", , ""graphicsthread_rng"", ]", Len: texture2"
], Len: 3
Segments: Segments: [[""texrng""]], Len: , Len: 11

 -> single-seg, testing with { -> single-seg, testing with "{tex}"
}
 -> Replaced
Segments: ["care", "graphics", "set_colour"], Len: 3
Segments: Segments: [[""rngcare""], , Len: "1
graphics -> single-seg, testing with "{}, 
"rectangle"], Len: Segments: 3["
rng"], Len: 1
 -> single-seg, testing with {}
Segments: Segments: [[""rngtime""]], Len: , Len: 1
1 -> single-seg, testing with 
{} -> single-seg, testing with 
{"time"}
Segments:  -> Replaced
["care", "graphics", "rectangle"], Len: 3Segments: 
["timeSegments: "[]"Segments: rng, Len: "[1]"
, Len: care -> single-seg, testing with 1"{
, " -> single-seg, testing with "{timekeyboard}""
}, 
" -> Replaced
is_downSegments: "[]", Len: rng3"
], Len: 1
Segments:  -> single-seg, testing with {[}"
Key", "UpSegments: "[]", Len: rng2"
], Len: 1
 -> single-seg, testing with {}
Segments: ["pos"Segments: ][, Len: "1rng
"] -> single-seg, testing with , Len: {1"
pos -> single-seg, testing with "{}, 
"texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {}
Segments: ["rand", "thread_rng"], Len: 2
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "set_colour"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "rectangle"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["time"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["delta"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {}
Segments: ["pos"], Len: 1
 -> single-seg, testing with {}
Segments: ["texture"], Len: 1
 -> single-seg, testing with {}
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "textureSegments: "[]", Len: rand3"
, "thread_rng"Segments: ][, Len: "2
tex"], Len: 1
 -> single-seg, testing with Segments: {[""texrng""}]
, Len:  -> Replaced
1
 -> single-seg, testing with {}
Segments: ["care", Segments: "[graphics""care", , ""rectanglegraphics"", ]", Len: set_colour3"
], Len: 3
Segments: ["rngSegments: "[]", Len: time1"
] -> single-seg, testing with {, Len: }1

 -> single-seg, testing with {"time"Segments: }[
" -> Replaced
rng"], Len: 1
 -> single-seg, testing with {}
Segments: ["Segments: time[""]rng, Len: 1"
] -> single-seg, testing with , Len: {1"time
" -> single-seg, testing with }{
} -> Replaced

Segments: Segments: [[""care"care, "", graphics""keyboard, "", rectangle""], Len: is_down3"
], Len: Segments: 3[
"rng"], Len: Segments: 1[
" -> single-seg, testing with Key{"}
, "Up"], Len: Segments: 2[
"rng"], Len: 1
 -> single-seg, testing with Segments: {[}
"pos"], Len: 1Segments: 
[" -> single-seg, testing with rng{""]texture, Len: 1"
,  -> single-seg, testing with {"}pos
"}
 -> Replaced
Segments: ["rng"], Len: 1
 -> single-seg, testing with {}Segments: 
["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["rand", "thread_rngSegments: "[]", Len: care2"
, "graphics", "rectangle"], Len: Segments: 3[
"rng"], Len: 1
Segments:  -> single-seg, testing with [{"}time
"], Len: 1
 -> single-seg, testing with {Segments: "Segments: time[["""}carecare
"" -> Replaced
, , ""keyboardgraphics"", , ""Segments: is_downset_colour["""]]time, Len: ", Len: 33]

, Len: 1
Segments:  -> single-seg, testing with [{""KeySegments: time"[", }""
rngUp" -> Replaced
"]], Len: , Len: 12

 -> single-seg, testing with {}Segments: 
["pos"], Len: 1
 -> single-seg, testing with {Segments: "[texture""rng, ""]pos, Len: "1}

 -> single-seg, testing with  -> Replaced
{}
Segments: ["deltaSegments: "[]", Len: rng1"
] -> single-seg, testing with , Len: {1"
texture" -> single-seg, testing with , {"}pos"
}
Segments: ["care"Segments: , [""keyboardcare"", ", is_down""graphics]", Len: , 3"
rectangle"Segments: ][, Len: "Key3", 
"Down"], Len: Segments: 2[
"rng"]Segments: , Len: [1"
pos -> single-seg, testing with "{]}, Len: 1

 -> single-seg, testing with {"texture", "pos"}Segments: 
[ -> Replaced
"rng"], Len: Segments: 1[
"delta -> single-seg, testing with "{]}, Len: 
1
 -> single-seg, testing with {"texture", "pos"Segments: }[
"rng"], Len: Segments: 1[
" -> single-seg, testing with care{", }"
keyboard", "is_down"], Len: 3
Segments: [Segments: "[rng"Key""], ", Len: Right1"
], Len:  -> single-seg, testing with 2{
}
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"texture", "pos"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["care", "graphics", "text"], Len: 3
Segments: ["time"], Len: 1
 -> single-seg, testing with {"time"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"time"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["tex"], Len: 1
 -> single-seg, testing with {"tex"}
 -> Replaced
Segments: ["rand", "thread_rngSegments: "[]Segments: ", Len: [care2""
care, "", graphics""keyboard, "", Segments: "rectangle[is_down"""]rng], Len: ", Len: 3]
3, Len: 
1
Segments:  -> single-seg, testing with [{"}Key
"Segments: , [""Uptime""], Len: ]Segments: 2, Len: [
1"
careSegments: " -> single-seg, testing with [, {"""posgraphicstime"""], }, Len: "
1set_colour
 -> Replaced
" -> single-seg, testing with ]{, Len: "pos3"
, "texture"}Segments: 
Segments: [ -> Replaced
[""timerng""]]Segments: , Len: , Len: [11"

delta -> single-seg, testing with " -> single-seg, testing with {]{", Len: }time1
"
} -> single-seg, testing with 
{" -> Replaced
pos", Segments: "[texture""rng}"
], Len: 1
Segments:  -> single-seg, testing with [{"care}"
, "keyboard", "is_down"], Len: 3Segments: 
["Segments: rng[""]Key, Len: "1, "
Down" -> single-seg, testing with ]{, Len: 2}

Segments: ["pos"], Len: 1
 -> single-seg, testing with Segments: {[""pos"care, "", texture""graphics}"
,  -> Replaced
"rectangle"], Len: Segments: 3[
"delta"], Len: 1
Segments:  -> single-seg, testing with {[""posrng"", ]", Len: texture1"
}
 -> single-seg, testing with {}
Segments: ["care", "keyboard", Segments: "[is_down""rng], Len: "3]
, Len: 1Segments: 
[ -> single-seg, testing with "{Key}"
, "Right"], Len: 2
Segments: Segments: [[""posrng""]], Len: , Len: 11

 -> single-seg, testing with  -> single-seg, testing with {{"}pos
", "texture"}
 -> Replaced
Segments: ["Segments: rng[""]delta, Len: "1], Len: 
1 -> single-seg, testing with 
{ -> single-seg, testing with }{
"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Up"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Down"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Right"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "keyboard", "is_down"], Len: 3
Segments: ["Key", "Left"], Len: 2
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["delta"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
Segments: ["care", "graphics", "texture"], Len: 3
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["pos"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
Segments: ["texture"], Len: 1
 -> single-seg, testing with {"pos", "texture"}
 -> Replaced
